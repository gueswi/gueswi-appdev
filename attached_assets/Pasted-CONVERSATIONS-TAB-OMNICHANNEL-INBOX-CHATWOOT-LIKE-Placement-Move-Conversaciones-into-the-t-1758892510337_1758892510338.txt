CONVERSATIONS TAB + OMNICHANNEL INBOX (CHATWOOT-LIKE)

Placement:
- Move "Conversaciones" into the top tabs (between Telefonía and IA).
- Route: /dashboard?tab=conversaciones and /dashboard/conversaciones keeps working (redirects to the tab).

Data model (extend existing):
- Conversation { id, tenantId, channel: "voice"|"whatsapp"|"instagram"|"facebook"|"email"|"webchat", status:"open"|"pending"|"closed", assigneeId?, teamId?, lastMessageAt, priority?, tags[], customFields JSONB }
- Message { id, conversationId, type:"text"|"note"|"event"|"transcript"|"attachment", role:"customer"|"agent"|"ai"|"system", text, attachments[], createdAt }
- Mention { id, messageId, userId }
- View (saved filter): { id, name, query JSON, ownerId?, shared:boolean }

Inbox UI (3 paneles):
- Left sidebar (Views):
  • System views: All, Mine, Unassigned, Mentioned, Closed
  • Saved views (folders) CRUD
  • Teams filter
  • Search box (number/email/name, full-text on lastMessage)
- Middle list:
  • Paginated list of conversations (avatar/contact, last snippet, channel icon, status badges SLA)
- Right pane (Thread):
  • Header: contact info, channel, assignee selector, status dropdown, tags
  • Message thread with real-time updates (WS): bubbles for customer/agent, “transcript” items for live calls, event chips (call started/hold/ended)
  • Composer: reply (public), internal note (private), attachments; @mentions with autosuggest; Ctrl+Enter to send
  • Actions: Close / Reopen, Transfer (to user/team), Create ticket (stub)

Softphone integration:
- When a call starts, auto-create/open Conversation(channel="voice").
- Stream “transcript” messages into the thread while call is ringing/answered.
- On hangup: append event "Call ended"; keep notes saved.

Realtime:
- WS topic per tenant; push MessageCreated, ConversationUpdated.
- React Query + WS-first (polling fallback 5s only if WS down).

Acceptance:
- I can switch to tab “Conversaciones”, see views, open a thread, post reply/note, @mention a user, assign to team/user, close/reopen, and see voice transcripts stream during a dev call.
